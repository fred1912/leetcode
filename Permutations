public class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        if (nums.length==0&&nums==null) return result ;
        
        dfs(nums, new ArrayList<Integer>(), result);
        return result;
    }
    
    public void dfs(int[] nums, List<Integer> path,List<List<Integer>> result){
        
        int len = nums.length;
        if (path.size()==len){
            result.add(new ArrayList<Integer>(path));
            return;
        }
        
        for (int i=0;i<len;i++){
            
            if (path.contains(nums[i])) continue;
            path.add(nums[i]);
            dfs(nums, path, result);
            path.remove(path.size()-1);
            
        }
    }
}
