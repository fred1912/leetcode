/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
      if (head==null) return null;
        ListNode fast = head;
        ListNode slow = head;
        
        ListNode cross = null;
        
        while (fast!=null&&fast.next!=null){
            fast = fast.next.next;
            slow = slow.next;
            if (fast==slow) {cross = slow;break;} 
        }
        if (cross==null) return null;
        slow = head;
        while (true){
            if (slow==fast) return s;
            slow = slow.next;
            fast = fast.next;
        }
    }
}
