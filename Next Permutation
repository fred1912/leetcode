public class Solution {
    public void nextPermutation(int[] nums) {
        
        int len = nums.length;
        int i = len - 1;
        
        if (len == 0){
            
            return;
            
        }
        
        while (i>0&&nums[i-1]>=nums[i]){
            i--;
        }
        
        if (i==0) {
            
            reverse(nums,0,len-1);
            return;
        }
        
        int left = i-1;
        while (i<len&&nums[i]>nums[left]){
            i++;
        }
        
        nums[i-1] = nums[i-1]^nums[left];
        nums[left] = nums[i-1]^nums[left];
        nums[i-1] = nums[i-1]^nums[left];
        
        i = left+1;
        reverse(nums,i,len-1);
    }
    
   public void reverse(int[] num, int l, int r){
       
       while (l<r){
           
           num[l] = num[l]^num[r];
           num[r] = num[l]^num[r];
           num[l] = num[l]^num[r];
           
           l++;
           r--;
           
       }
       
       
   }
    
    
}
