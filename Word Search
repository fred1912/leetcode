public class Solution {
    public boolean exist(char[][] board, String word) {
        
        if (board==null||board.length==0||board[0].length==0){
            return false;
        }
        int rows = board.length;
        int cols = board[0].length;
        
        for (int i = 0;i < rows;i++)
            for (int j = 0;j < cols;j++){
                if (board[i][j]!=word.charAt(0)) continue;
                if (dfs(board,word,i,j,0)) return true;
                
            }
        return false;
    }
    
   public boolean dfs(char[][] board, String word, int i, int j, int place){
       
       if (place>=word.length()){
            return true;    
       }
       
       if (i<0||i>=board.length||j<0||j>=board[0].length){
           return false;
       }
       if (word.charAt(place)!=board[i][j]){
           return false;
       }
       char temp = board[i][j];
       board[i][j] = '$';
       
       boolean result = (dfs(board,word,i+1,j,place+1)||dfs(board,word,i-1,j,place+1)||
                         dfs(board,word,i,j+1,place+1)||dfs(board,word,i,j-1,place+1));
      
      board[i][j] = temp;
      
      return result;
       
   }
}
