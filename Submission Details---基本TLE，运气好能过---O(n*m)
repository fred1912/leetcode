public class Solution {
    public List<Integer> findSubstring(String s, String[] words) {
        
        List<Integer> result = new ArrayList<Integer>();
        if (s.length()<1||words.length<1) return result;
        int len = words[0].length();
        int m=words.length;
        
        HashMap<String, Integer> map = new HashMap<String, Integer>();
        HashMap<String, Integer> temp = new HashMap<String, Integer>();
      
        for (int i=0;i<m;i++){
        
            if (map.containsKey(words[i])){
                
                map.put(words[i],map.get(words[i])+1);
                
            }else{
                
                map.put(words[i],1);
                
            }
            
        }
        
        
       
        for (int i=0;i<=s.length()-len*m;i++){
            
            temp.clear();
            for (int j=0;j<m;j++){
                int start = i+j*len;
                String str = s.substring(start,start+len);
                if (!map.containsKey(str)) break;
                if (!temp.containsKey(str)) {
                    
                    temp.put(str,1);
                }else{
                    
                    temp.put(str,temp.get(str)+1);
                }
                if (temp.get(str)>map.get(str)) break;
                if (j==m-1) result.add(i);
            }
        }
        
        return result;
        
        
    }
}
