public class Solution {
    public int maximalRectangle(char[][] matrix) {
        if (matrix.length==0) return 0;
        int m = matrix.length;
        int n = matrix[0].length;
        int[][] height = new int[m][n];
        for (int i=0;i<n;i++){
            if (matrix[0][i]=='1') {
                height[0][i] = 1;
            }
            else{
                height[0][i] = 0;
            }
        }
       for (int i=1;i<m;i++){
        for(int j=0;j<n;j++){
            if (matrix[i][j]== '0'){
                height[i][j]=0;
            }else{
                height[i][j]=height[i-1][j]+1;
            }
        }
       }
       int max = 0;
       for (int i=0;i<m;i++){
           Stack<Integer> s = new Stack<Integer>();
           int num = 0;
           while (num<=n){
               if (s.isEmpty()||(num<n&&height[i][num]>=height[i][s.peek()])){
                   s.push(num);
                   num++;
               }else{
                   int h = height[i][s.pop()];
                   int width = s.isEmpty()?num:num-1-s.peek();
                   max = Math.max(max,h*width);
               }
           }
       }
       return max;
    }
}
