public class Solution {
    public List<Integer> largestDivisibleSubset(int[] nums) {
        List<Integer> result = new ArrayList<Integer>();
        if (nums.length==0) return result;
        Arrays.sort(nums);
        
        int len = nums.length;
        
        int[] dp = new int[len];
        Arrays.fill(dp,1);
        int[] index = new int[len];
        Arrays.fill(index,-1);
        
        int maxLength = 1;
        int maxIndex = 0;
        for (int i=0;i<len;i++){
            for (int j=i-1;j>=0;j--){
                if (nums[i]%nums[j]==0&&dp[j]+1>dp[i]){
                    dp[i] = dp[j]+1;
                    index[i] = j;
                }
            }
            if (dp[i]>maxLength){
                maxLength = dp[i];
                maxIndex = i;
            }
        }
        for (int i=maxIndex;i!=-1;i=index[i])
            result.add(nums[i]);
        return result;
    }
}
