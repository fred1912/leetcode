/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode sortList(ListNode head) {
        if (head==null||head.next==null) return head;
        ListNode mid = getMid(head);
        ListNode right = mid.next;
        mid.next = null;
        
        ListNode left = sortList(head);
        right   = sortList(right);
        
        return merge(left,right);
    }
    
    public ListNode getMid(ListNode head){
        ListNode slow = head;
        ListNode fast = head.next;
        
        while (fast!=null&&fast.next!=null){
            fast = fast.next.next;
            slow = slow.next;
        }
        return slow;
    }
    
    public ListNode merge(ListNode node1,ListNode node2){
        ListNode ans = new ListNode(0);
        ListNode cur = ans;
        
        while (node1!=null&&node2!=null){
            if (node1.val<node2.val){
                cur.next = node1;
                node1 = node1.next;
            }else{
                cur.next = node2;
                node2 = node2.next;
            }
            cur = cur.next;
        }
        if (node1!=null){
            cur.next = node1;
        }else{
            cur.next = node2;
        }
        return ans.next;
    }
}
