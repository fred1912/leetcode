public class Solution {
    public List<String> findItinerary(String[][] tickets) {
        HashMap<String, PriorityQueue<String>> map = new HashMap<String, PriorityQueue<String>>();
        List<String> list = new ArrayList<String>();
        String cur = "JFK";
        int len = tickets.length;
        for (int i=0;i<tickets.length;i++){
            if (!map.containsKey(tickets[i][0])){
                map.put(tickets[i][0],new PriorityQueue<String>());
            }
            map.get(tickets[i][0]).add(tickets[i][1]);
        }
        dfs(cur,map,list);
        Collections.reverse(list);
        return list;
        
    }
    public void dfs(String s, HashMap<String, PriorityQueue<String>> map, List<String> list){
        while(map.containsKey(s)&&!map.get(s).isEmpty()){
            dfs(map.get(s).poll(),map,list);
        }
        list.add(s);
    }
    
}
