/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    
    public ListNode backUp;
    
    public TreeNode sortedListToBST(ListNode head) {
        if (head==null) return null;
        int size = 0;
        backUp = head;
        size = getLength(head);
        return createTree(size);
    }
    public int getLength(ListNode head){
        int size = 0;
        while (head!=null){
            size++;
            head=head.next;
        }
        return size;
    }
    public TreeNode createTree(int size){
        if (size<=0) return null;
        
        TreeNode leftNode=createTree(size/2);
        TreeNode root = new TreeNode(backUp.val);
        backUp = backUp.next;
        TreeNode rightNode = createTree(size-size/2-1);
        
        root.left = leftNode;
        root.right = rightNode;
        
        return root;
    }
}
