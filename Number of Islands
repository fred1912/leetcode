public class Solution {
    int m,n;
    
    public int numIslands(char[][] grid) {
        
        int result = 0;
        if (grid==null||grid.length==0||grid[0].length==0) return 0;
        
        m = grid.length;
        n = grid[0].length;
        
        for (int i=0;i<grid.length;i++){
            for (int j=0;j<grid[0].length;j++){
                if (grid[i][j]!='1') continue;
                result++;
                dfs(grid,i,j);
            }
        }
        return result;
    }
    
    public void dfs(char[][] grid,int i,int j){
        if (i<0||i>=m||j<0||j>=n) return ;
        if (grid[i][j]=='1'){
            grid[i][j]='0';
            dfs(grid,i+1,j);
            dfs(grid,i-1,j);
            dfs(grid,i,j+1);
            dfs(grid,i,j-1);
        }
    }
}
