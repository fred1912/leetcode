public class Solution {
    public List<String> generateParenthesis(int n) {
        
        List<String> result = new ArrayList<String>();
        
        if (n==0) return result;
        
        dfs(n,n,new StringBuilder(),result);
        
        return result;
        
        
    }
    
    public void dfs(int left,int right,StringBuilder s,List<String> result){
        
        if ((left==0)&&(right==0)){
            
            result.add(s.toString());
            
            return;
            
        }
        
        if ((left<0)||(right<0)||(left>right)) return ;
        
        dfs(left-1,right,s.append('('),result);
        s.deleteCharAt(s.length()-1);
        
        dfs(left,right-1,s.append(')'),result);
        s.deleteCharAt(s.length()-1);
    }
}
