/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> result = new ArrayList<Integer>();
        if (root == null) return result;
        
        Stack<TreeNode> s = new Stack<TreeNode>();
        Stack<Integer> reverse = new Stack<Integer>();
        s.push(root);
        
        while (!s.isEmpty()){
            TreeNode cur = s.pop();
            reverse.push(cur.val);
            if (cur.left!=null) s.push(cur.left);
            if (cur.right!=null) s.push(cur.right);
            
        }
        while (!reverse.isEmpty()){
            result.add(reverse.pop());
        }
        
        return result;    
    }
}
